name: Perform merge checks
on: pull_request

env:
  BUILD_TYPE: Release
  VST_TARGET_NAME: PeakEater_VST3
  AU_TARGET_NAME: PeakEater_AU
  LV2_TARGET_NAME: PeakEater_LV2
  CLAP_TARGET_NAME: PeakEater_CLAP
  JUCE_REVISION: 69795dc
  MACOS_RELEASE_NAME: PeakEater_v0.6.2_macOS
  WINDOWS_RELEASE_NAME: PeakEater_v0.6.2_Windows
  LINUX_RELEASE_NAME: PeakEater_v0.6.2_Linux
jobs:
  macos:
    name: macOS
    runs-on: macos-12
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'
      - name: Install the Apple certificate and provisioning profile
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.MACOS_BUILD_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.MACOS_P12_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.MACOS_BUILD_PROVISION_PROFILE_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.MACOS_KEYCHAIN_PASSWORD }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db
          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode --output $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode --output $PP_PATH
          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH
          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
      - name: Install System Requirements
        run: |
          brew update
          brew bundle install --file=${{github.workspace}}/config/system/Brewfile
      - name: Build JUCE
        run: conan create ${{github.workspace}}/juce-conan -pr:b=${{github.workspace}}/conan/profiles/macos
      - name: Build Project
        env:
          MACOS_APPLE_IDENTITY: ${{ secrets.MACOS_APPLE_IDENTITY }}
          MACOS_APPLE_ID: ${{ secrets.MACOS_APPLE_ID }}
          MACOS_APPLE_PASSWORD: ${{ secrets.MACOS_APPLE_PASSWORD }}
          MACOS_APPLE_TEAM_ID: ${{ secrets.MACOS_APPLE_TEAM_ID }}
        run: |
          conan install ${{github.workspace}} -pr=${{github.workspace}}/conan/profiles/macos
          conan build ${{github.workspace}} -pr=${{github.workspace}}/conan/profiles/macos
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.MACOS_RELEASE_NAME }}
          path: ${{github.workspace}}/build/release/PeakEater-0.6.2.dmg

  windows:
    name: Windows
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v3
        with:
            submodules: 'recursive'
      - name: Install System Requirements
        run: |
          chocolatey update
          chocolatey install ${{github.workspace}}/config/system/chocolatey.config
      - name: Build JUCE
        run: conan create ${{github.workspace}}/juce-conan -pr:b=${{github.workspace}}/conan/profiles/macos
      - name: Build Project
        run: |
          conan install ${{github.workspace}} -pr=${{github.workspace}}/conan/profiles/windows
          conan build ${{github.workspace}} -pr=${{github.workspace}}/conan/profiles/windows
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.WINDOWS_RELEASE_NAME }}
          path: |
            ${{github.workspace}}/build/PeakEater_artefacts/${{env.BUILD_TYPE}}/VST3/PeakEater.vst3/Contents/x86_64-win/PeakEater.vst3
            ${{github.workspace}}/build/PeakEater_artefacts/${{env.BUILD_TYPE}}/LV2/PeakEater.lv2
            ${{github.workspace}}/build/PeakEater_artefacts/${{env.BUILD_TYPE}}/CLAP/PeakEater.clap

  linux:
    name: Linux
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'
      - name: Install System Requirements
        run: |
          sudo apt update
          sudo apt install -y < ${{github.workspace}}/config/system/packages.txt
      - name: Install Conan
        id: conan
        uses: turtlebrowser/get-conan@main
        with:
          version: 2.0.2
      - name: Build JUCE
        run: conan create ${{github.workspace}}/juce-conan -pr:b=${{github.workspace}}/conan/profiles/linux
      - name: Build Project
        run: |
          conan install ${{github.workspace}} -pr=${{github.workspace}}/conan/profiles/linux
          conan build ${{github.workspace}} -pr=${{github.workspace}}/conan/profiles/linux
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.LINUX_RELEASE_NAME }}
          path: |
            ${{github.workspace}}/build/PeakEater_artefacts/${{env.BUILD_TYPE}}/VST3/PeakEater.vst3/Contents/x86_64-linux/PeakEater.so
            ${{github.workspace}}/build/PeakEater_artefacts/${{env.BUILD_TYPE}}/LV2/PeakEater.lv2
            ${{github.workspace}}/build/PeakEater_artefacts/${{env.BUILD_TYPE}}/CLAP/PeakEater.clap
