name: Perform merge checks
on: pull_request

env:
  BUILD_TYPE: Release
  VST_TARGET_NAME: PeakEater_VST3
  AU_TARGET_NAME: PeakEater_AU
  LV2_TARGET_NAME: PeakEater_LV2
  CLAP_TARGET_NAME: PeakEater_CLAP
  JUCE_REVISION: 69795dc
  MACOS_RELEASE_NAME: PeakEater_v0.6.2_macOS
  WINDOWS_RELEASE_NAME: PeakEater_v0.6.2_Windows
  LINUX_RELEASE_NAME: PeakEater_v0.6.2_Linux
jobs:
  macos:
    name: macOS
    runs-on: macos-12
    steps:
      - uses: actions/checkout@v3
      - name: Install the Apple certificate and provisioning profile
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.MACOS_BUILD_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.MACOS_P12_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.MACOS_BUILD_PROVISION_PROFILE_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.MACOS_KEYCHAIN_PASSWORD }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db
          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode --output $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode --output $PP_PATH
          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH
          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
      - name: Install Python Dependencies
        run: python3 -m pip install -r ${{github.workspace}}/requirements.txt
      - name: Init Git Submodules
        run: git submodule update --init --recursive
      - name: Install Tool Requirements
        run: |
          brew update
          brew install ninja conan python3
      - name: Configure Conan
        run: conan profile detect
      - name: Build
        run: conan create ${{github.workspace}}/juce-conan && conan install ${{github.workspace}} && conan build ${{github.workspace}}
      - name: Package
        env:
          MACOS_APPLE_IDENTITY: ${{ secrets.MACOS_APPLE_IDENTITY }}
          MACOS_APPLE_ID: ${{ secrets.MACOS_APPLE_ID }}
          MACOS_APPLE_PASSWORD: ${{ secrets.MACOS_APPLE_PASSWORD }}
          MACOS_APPLE_TEAM_ID: ${{ secrets.MACOS_APPLE_TEAM_ID }}
        run: python ${{github.workspace}}/Scripts/Release/MacOS.py --release_type=${{env.BUILD_TYPE}} --sign_and_notarize=True --release_version=0.6.2
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.MACOS_RELEASE_NAME }}
          path: ${{github.workspace}}/build/release/PeakEater-0.6.2.dmg

  windows:
    name: Windows
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v3
      - name: Init Git Submodules
        run: git submodule update --init --recursive
      - name: Install Tool Requirements
        run: |
          pip install conan
      - name: Configure Conan
        run: conan profile detect
      - name: Build
        run: conan create ${{github.workspace}}\juce-conan && conan install ${{github.workspace}} && conan build ${{github.workspace}}
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.WINDOWS_RELEASE_NAME }}
          path: |
            ${{github.workspace}}/build/PeakEater_artefacts/${{env.BUILD_TYPE}}/VST3/PeakEater.vst3/Contents/x86_64-win/PeakEater.vst3
            ${{github.workspace}}/build/PeakEater_artefacts/${{env.BUILD_TYPE}}/LV2/PeakEater.lv2
            ${{github.workspace}}/build/PeakEater_artefacts/${{env.BUILD_TYPE}}/CLAP/PeakEater.clap

  linux:
    name: Linux
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v3
      - name: Init Git Submodules
        run: git submodule update --init --recursive
      - name: Install Tool Requirements
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-setuptools python3-pip
          sudo apt-get install -y ninja-build
          sudo apt-get install -y g++ libgtk-3-dev libfreetype6-dev libx11-dev libxinerama-dev libxrandr-dev libxcursor-dev mesa-common-dev
          sudo apt-get install -y libasound2-dev ladspa-sdk freeglut3-dev libxcomposite-dev libcurl4-openssl-dev libwebkit2gtk-4.0-37 libwebkit2gtk-4.0-dev 
          python3 -m pip install conan
      - name: Configure Conan
        run: conan profile detect
      - name: Build
        run: conan create ${{github.workspace}}/juce-conan && conan install ${{github.workspace}} && conan build ${{github.workspace}}
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.LINUX_RELEASE_NAME }}
          path: |
            ${{github.workspace}}/build/PeakEater_artefacts/${{env.BUILD_TYPE}}/VST3/PeakEater.vst3/Contents/x86_64-linux/PeakEater.so
            ${{github.workspace}}/build/PeakEater_artefacts/${{env.BUILD_TYPE}}/LV2/PeakEater.lv2
            ${{github.workspace}}/build/PeakEater_artefacts/${{env.BUILD_TYPE}}/CLAP/PeakEater.clap
