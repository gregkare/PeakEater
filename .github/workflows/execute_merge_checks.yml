name: Perform merge checks
on: pull_request

jobs:
  macos:
    name: macOS
    runs-on: macos-12
    env:
      CONAN_DEFAULT_PROFILE: macos-armv8
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'
      - name: Install the Apple certificate and provisioning profile
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.MACOS_BUILD_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.MACOS_P12_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.MACOS_BUILD_PROVISION_PROFILE_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.MACOS_KEYCHAIN_PASSWORD }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db
          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode --output $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode --output $PP_PATH
          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH
          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
      - name: Install System Requirements
        run: |
          brew update
          brew bundle install --file=config/system/requirements.macos.brew.rb
      - name: Install Conan
        id: conan
        uses: turtlebrowser/get-conan@main
        with:
          version: 2.0.3
      - name: Install Conan Config
        run: |
          conan profile detect
          conan config install config/conan
      - name: Build Conan Dependencies
        run: |
          conan create modules/pluginval-conan
          conan create modules/juce-conan
      - name: Build Project
        env:
          MACOS_APPLE_IDENTITY: ${{ secrets.MACOS_APPLE_IDENTITY }}
          MACOS_APPLE_ID: ${{ secrets.MACOS_APPLE_ID }}
          MACOS_APPLE_PASSWORD: ${{ secrets.MACOS_APPLE_PASSWORD }}
          MACOS_APPLE_TEAM_ID: ${{ secrets.MACOS_APPLE_TEAM_ID }}
        run: |
          conan install .
          conan build .
      - name: Test - Verify Build Artefacts 
        run: python3 test/artefacts.test.py
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: peakeater-macos
          path: build/Release/peakeater_artefacts/Release/DMG/peakeater.dmg

  windows:
    name: Windows
    runs-on: windows-2022
    env:
      CONAN_DEFAULT_PROFILE: windows-x86_64
    steps:
      - uses: actions/checkout@v3
        with:
            submodules: 'recursive'
      - name: Install System Requirements
        run: |
          choco install config\system\requirements.windows.choco.config
      - name: Install Conan
        id: conan
        uses: turtlebrowser/get-conan@main
        with:
          version: 2.0.3
      - name: Install Conan Config
        run: |
          conan profile detect
          conan config install config\conan
      - name: Build Conan Dependencies
        run: |
          conan create modules/pluginval-conan
          conan create modules/juce-conan
      - name: Build Project
        run: |
          conan install .
          conan build .
      - name: Test - Verify Build Artefacts 
        run: python3 test/artefacts.test.py
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: peakeater-windows
          path: |
            build/Release/peakeater_artefacts/Release/VST3/peakeater.vst3/Contents/x86_64-win/peakeater.vst3
            build/Release/peakeater_artefacts/Release/LV2/peakeater.lv2
            build/Release/peakeater_artefacts/Release/CLAP/peakeater.clap

  linux:
    name: Linux
    runs-on: ubuntu-20.04
    env:
      CONAN_DEFAULT_PROFILE: linux-x86_64
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'
      - name: Install System Requirements
        run: |
          sudo apt-get update
          sudo xargs -a config/system/requirements.linux.apt.txt apt-get install -y
      - name: Install Conan
        id: conan
        uses: turtlebrowser/get-conan@main
        with:
          version: 2.0.3
      - name: Install Conan Config
        run: |
          conan profile detect
          conan config install config/conan
      - name: Build Conan Dependencies
        run: |
          conan create modules/pluginval-conan
          conan create modules/juce-conan
      - name: Build Project
        run: |
          conan install .
          conan build .
      - name: Test - Verify Build Artefacts 
        run: python3 test/artefacts.test.py
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: peakeater-linux
          path: |
            build/Release/peakeater_artefacts/Release/VST3/peakeater.vst3/Contents/x86_64-linux/peakeater.so
            build/Release/peakeater_artefacts/Release/LV2/peakeater.lv2
            build/Release/peakeater_artefacts/Release/CLAP/peakeater.clap
